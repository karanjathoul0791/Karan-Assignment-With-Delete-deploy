{"version":3,"sources":["Components/checkBox.jsx","Components/textBox.jsx","Components/radioGroup.jsx","Components/cityList.jsx","App.js","reportWebVitals.js","index.js"],"names":["CheckBox","label","onChange","checked","className","type","name","id","value","htmlFor","TextBox","placeholder","onSubmit","useState","setValue","e","target","onClick","RadioGroup","cities","selectCity","selectAll","checkAll","addCity","deleteCity","selected","map","city","CityList","setCities","setCheckAll","useEffect","flag","Fragment","updatedCity","i","prevState","newState","push","console","log","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ba0a469.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction CheckBox({ label, onChange, checked }) {\r\n   return (\r\n      <div className='form-check'>\r\n         <input\r\n            className='form-check-input'\r\n            type='checkbox'\r\n            name={label}\r\n            id={label}\r\n            value={label}\r\n            onChange={onChange}\r\n            checked={checked}\r\n         />\r\n         <label className='form-check-label' htmlFor={label}>\r\n            {label}\r\n         </label>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CheckBox\r\n","import React, { useState } from \"react\";\r\n\r\nfunction TextBox({ label, placeholder, onSubmit }) {\r\n  const [value, setValue] = useState(\"\");\r\n  const addCity = () => {\r\n    if (value) {\r\n      onSubmit(value);\r\n    }\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder={placeholder}\r\n        aria-label={placeholder}\r\n        value={value}\r\n        name={label}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        aria-describedby=\"button-addon\"\r\n      />\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        type=\"button\"\r\n        id=\"button-addon\"\r\n        onClick={addCity}\r\n      >\r\n        {label}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextBox;\r\n","import React, { useState } from 'react'\r\nimport CheckBox from './checkBox'\r\nimport TextBox from './textBox'\r\n\r\nfunction RadioGroup({ cities, selectCity, selectAll, checkAll, addCity, deleteCity }) {\r\n   return (\r\n      <form>\r\n         <TextBox label='Add City' placeholder='City Name' onSubmit={addCity} />\r\n\r\n         <CheckBox\r\n            label={checkAll.name}\r\n            onChange={(e) => selectAll(e.target.checked)}\r\n            key={checkAll.name}\r\n            checked={checkAll.selected}\r\n         />\r\n         {cities.map((city) => {\r\n            return (\r\n               <div className='checkbox-button mt-3 '>\r\n                  <CheckBox\r\n                     label={city.name}\r\n                     onChange={(e) => selectCity(e.target.checked, city)}\r\n                     key={city.name}\r\n                     checked={city.selected}\r\n                  />\r\n                  <button\r\n                     type='button'\r\n                     className='btn btn-primary btn-sm '\r\n                     onClick={() => deleteCity(city.name)}\r\n                  >\r\n                     remove\r\n                  </button>\r\n               </div>\r\n            )\r\n         })}\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default RadioGroup\r\n","import React, { useEffect, useState } from 'react'\r\nimport RadioGroup from './radioGroup'\r\n\r\nfunction CityList() {\r\n   const [cities, setCities] = useState([\r\n      { name: 'Chennai', selected: false },\r\n      { name: 'Bangalore', selected: false },\r\n      { name: 'Mumbai', selected: false },\r\n   ])\r\n   const [checkAll, setCheckAll] = useState({\r\n      name: 'Select All',\r\n      selected: false,\r\n   })\r\n\r\n   const selectAll = (checked) => {\r\n      setCheckAll({ ...checkAll, selected: checked })\r\n      setCities(function (prevState) {\r\n         const newState = [...prevState]\r\n         for (let i of newState) i.selected = checked\r\n         return newState\r\n      })\r\n   }\r\n\r\n   const selectCity = (checked, city) => {\r\n      const updatedCity = cities.map((i) =>\r\n         i.name === city.name ? { ...city, selected: checked } : i\r\n      )\r\n      setCities(updatedCity)\r\n   }\r\n\r\n   const deleteCity = (city) => {\r\n      console.log(city)\r\n      const updatedCity = cities.filter((i) => i.name !== city)\r\n      setCities(updatedCity)\r\n   }\r\n\r\n   const addCity = (city) => {\r\n      setCities((prevState) => {\r\n         const newState = [...prevState]\r\n         newState.push({ name: city, selected: false })\r\n         return newState\r\n      })\r\n   }\r\n\r\n   useEffect(\r\n      function () {\r\n         let flag = true\r\n         for (let i of cities) if (!i.selected) flag = false\r\n         setCheckAll({ ...checkAll, selected: flag })\r\n      },\r\n      [cities]\r\n   )\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <RadioGroup\r\n            cities={cities}\r\n            selectCity={selectCity}\r\n            selectAll={selectAll}\r\n            checkAll={checkAll}\r\n            addCity={addCity}\r\n            deleteCity={deleteCity}\r\n         />\r\n      </React.Fragment>\r\n   )\r\n}\r\n\r\nexport default CityList\r\n","import './App.css'\nimport CityList from './Components/cityList'\n// create a file named StateList.js\n// import the state list from the local data file\nfunction App() {\n   return (\n      <div className='App'>\n         <CityList />\n      </div>\n   )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}